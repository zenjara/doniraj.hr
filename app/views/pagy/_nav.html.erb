<%#
  This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
  calls with the actual strings ("&lsaquo; Prev", "Next &rsaquo;", "&hellip;").

  The link variable is set to a proc that returns the link tag.
  Usage: link.call( page_number [, text [, extra_attributes_string ]])
-%>
<% link = pagy_link_proc(pagy) -%>
<%#                            -%><nav aria-label="pager" class="pagy_nav pagination" role="navigation" data-controller="search" data-search-target="pagination">
  <% if pagy.prev                -%>  <span class="page prev"><%== link.call(pagy.prev, '<', "data-action='click->search#previousPage' data-url=#{search_path} aria-label='previous'") %></span>
  <% else                        -%>  <span class="page prev disabled"><%== '<' %></span>
  <% end                         -%>
  <% pagy.series.each do |item| # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36] -%>
    <%   if    item.is_a?(Integer) -%>  <span class="page"><%== link.call(item, item,"data-action='click->search#paginate' data-url=#{search_path}") %></span>
    <%   elsif item.is_a?(String)  -%>  <span class="page current"><%= item %></span>
    <%   elsif item == :gap        -%>  <span class="page gap"><%== pagy_t('pagy.nav.gap') %></span>
    <%   end                       -%>
  <% end                         -%>
  <% if pagy.next                -%>  <span class="page next"><%== link.call(pagy.next, '>',"data-action='click->search#nextPage' data-url=#{search_path} aria-label='next'") %></span>
  <% else                        -%>  <span class="page next disabled"><%== '>' %></span>
  <% end                         -%>
<%#                            -%></nav>